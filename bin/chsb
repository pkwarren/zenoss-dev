#!/usr/bin/env python

# Changes the current SVN checkout to the specified sandbox name.

import os
import optparse
import subprocess
import sys
from os.path import join, dirname, abspath, isdir

libdir = abspath(join(dirname(__file__), '../lib/python'))
if not isdir(libdir):
    print >> sys.stderr, "Failed to find library files in: %s" % libdir
    sys.exit(1)
sys.path.append(libdir)

from zenoss.dev import sandbox

config = sandbox.load_config()

usage = """\
%prog [options] <sandbox_or_branch_name>

Performs a SVN switch to the specified sandbox / branch name. Must be run
in any path within a SVN checkout (either core or enterprise).

Examples:
    $ chsb trunk
      # Switches to trunk.

    $ chsb zenoss-4.1.x
      # Switches to the official zenoss-4.1.x branch.

    $ chsb feature
      # Switches to the configured user's 'feature' sandbox.\
"""
parser = optparse.OptionParser(usage=usage)
parser.add_option('-u', '--user', dest='user', default=config.svn_username,
                  help="Switch to sandbox for user (default %default).")
parser.add_option('--dry-run', dest='dry_run', action='store_true',
                  help="Try operation but make no changes.")
(options, args) = parser.parse_args()
if not args:
    parser.error('Missing branch name')
if len(args) > 1:
    parser.error('Only one branch name should be specified')
if not options.user:
    parser.error('User must be specified in %s or via the -u/--user option' % 
                 sandbox.CONFIG_FILE)

branch_name = args[0]

try:
    root = sandbox.find_root_checkout()
    branch_url = sandbox.find_branch_url(root, branch_name, options.user)

    cmd = ['svn' , 'switch', branch_url, root]
    print ' '.join(cmd)
    if not options.dry_run:
        rc = subprocess.call(cmd)
        if rc != 0:
            sys.exit(rc)
except Exception, e:
    print >> sys.stderr, "Failed: %s" % e
    sys.exit(1)

