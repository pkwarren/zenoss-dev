#!/bin/bash

[ -z "$ZENREL" ] && echo "ZENREL not set" && exit 1

# Load user's environment settings
for src in .bash_profile .bash_login .profile .bashrc; do
    if [ -f "$HOME/$src" ]; then
        . "$HOME/$src"
        break
    fi
done

find_source_core() {
    local location="trunk/core"
    case "$ZENREL" in
        [0-9]*.[0-9]*.[0-9]*)
            location="tags/core/zenoss-$ZENREL"
            ;;
        [0-9]*.[0-9]*.x)
            location="branches/core/zenoss-$ZENREL"
            ;;
    esac
    echo "$location"
}

find_source_enterprise() {
    local location="trunk/enterprise"
    case "$ZENREL" in
        [0-9]*.[0-9]*.[0-9]*)
            location="tags/zenoss-$ZENREL"
            ;;
        [0-9]*.[0-9]*.x)
            location="branches/zenoss-$ZENREL"
            ;;
    esac
    echo "$location"
}

DEV_ROOT=$HOME/Projects/zenoss
DEV_HOME=$DEV_ROOT/$ZENREL
export ZENHOME=$DEV_HOME/home
for d in "$ZENHOME" "$DEV_HOME/workspace" "$DEV_HOME/misc"; do
    mkdir -p "$d"
done
if [ ! -f "$DEV_HOME/misc/settings.xml" ]; then
    cat > "$DEV_HOME/misc/settings.xml" <<EOF
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                        http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <profiles>
    <profile>
      <id>protoc-$ZENREL</id>
      <properties>
        <protoc.path>$ZENHOME/bin/protoc</protoc.path>
      </properties>
    </profile>
  </profiles>
</settings>
EOF
fi
export INSTANCE_HOME=$ZENHOME
export ZENSRC=$DEV_HOME/core
export LOCAL_SVN_PATH="$DEV_ROOT/svn/svnint"
export LOCAL_SVN_ROOT="file://$LOCAL_SVN_PATH"
export ZENOSS_SVN_ROOT="http://dev.zenoss.com/svnint"

if [ ! -d "$ZENSRC" ]; then
    echo -n "Extract core? [Y/n]: "
    read extract
    case "$extract" in
        [nN])
            mkdir -p "$ZENSRC"
            ;;
        *)
            zenoss_core=""
            zenoss_core_default=`find_source_core`
            while [ -z "$zenoss_core" ]; do
                echo -n "Zenoss Core Release [$zenoss_core_default]: "
                read zenoss_core
                zenoss_core=${zenoss_core:-"$zenoss_core_default"}
                svn --non-interactive info "$ZENOSS_SVN_ROOT" > /dev/null
                if [ $? -ne 0 ]; then
                    echo "Unable to authenticate to $ZENOSS_SVN_ROOT"
                    echo "Run this command to authenticate:"
                    echo "  svn info $ZENOSS_SVN_ROOT --username <your_username>"
                    exit 1
                fi
                svn --non-interactive info "$ZENOSS_SVN_ROOT/$zenoss_core/inst" > /dev/null
                if [ $? -ne 0 ]; then
                    echo "Invalid SVN url: $ZENOSS_SVN_ROOT/$zenoss_core" >&2
                    zenoss_core=""
                fi
            done
            if [ -d "$LOCAL_SVN_PATH" ]; then
                svn --non-interactive -q checkout "$LOCAL_SVN_ROOT/$zenoss_core" "$ZENSRC"
                svn --non-interactive -q switch --relocate "$LOCAL_SVN_ROOT" "$ZENOSS_SVN_ROOT" "$ZENSRC"
                svn --non-interactive update "$ZENSRC"
            else
                svn --non-interactive -q checkout "$ZENOSS_SVN_ROOT/$zenoss_core" "$ZENSRC"
            fi
            ;;
    esac
fi
export ZENENTSRC=$DEV_HOME/enterprise
if [ ! -d "$ZENENTSRC" ]; then
    echo -n "Extract enterprise? [Y/n]: "
    read extract
    case "$extract" in
        [nN])
            mkdir -p "$ZENENTSRC"
            ;;
        *)
            zenoss_enterprise=""
            zenoss_enterprise_default=`find_source_enterprise`
            while [ -z "$zenoss_enterprise" ]; do
                echo -n "Zenoss Enterprise Release [$zenoss_enterprise_default]: "
                read zenoss_enterprise
                zenoss_enterprise=${zenoss_enterprise:-"$zenoss_enterprise_default"}
                svn --non-interactive info "$ZENOSS_SVN_ROOT/$zenoss_enterprise/zenpacks/ZenPacks.zenoss.EnterpriseSkin" > /dev/null
                if [ $? -ne 0 ]; then
                    echo "Invalid SVN url: $ZENOSS_SVN_ROOT/$zenoss_enterprise" >&2 zenoss_enterprise=""
                fi
            done
            if [ -d "$LOCAL_SVN_PATH" ]; then
                svn --non-interactive -q checkout "$LOCAL_SVN_ROOT/$zenoss_enterprise/zenpacks" "$ZENENTSRC"
                svn --non-interactive -q switch --relocate "$LOCAL_SVN_ROOT" "$ZENOSS_SVN_ROOT" "$ZENENTSRC"
                svn --non-interactive update "$ZENENTSRC"
            else
                svn --non-interactive -q checkout "$ZENOSS_SVN_ROOT/$zenoss_enterprise/zenpacks" "$ZENENTSRC"
            fi
            ;;
    esac
fi
export RRDDEPS_SKIP=1
if [ `uname -s` = "Darwin" ]; then
    export BUILD64=1
fi

# Add zenoss-dev/bin to PATH if it isn't already
echo "$PATH" | grep -q "$ZENOSS_DEV_HOME/bin" 2>/dev/null
if [ $? -ne 0 ]; then
    PATH="$ZENOSS_DEV_HOME/bin:$PATH"
fi

PATH=$ZENHOME/bin:$PATH
CCACHE_VERSION=$(ccache -V 2>/dev/null | head -1 | awk '{print $NF}')
for dir in /usr/lib/ccache /usr/local/Cellar/ccache/$CCACHE_VERSION/libexec; do
    if [ -d "$dir" ]; then
        PATH="$dir:$PATH"
        break
    fi
done
unset CCACHE_VERSION
export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp
export PYTHONPATH=$ZENHOME/lib/python${PYTHONPATH:+":$PYTHONPATH"}
export PS1="(zenoss $ZENREL) $PS1"

if [ -e "$HOME/.pystartup" ]; then
    export PYTHONSTARTUP="$HOME/.pystartup"
fi

alias cdz="cd $ZENHOME && ls"
alias cdp="cd $ZENHOME/Products && ls"
alias cdcore="cd $ZENSRC && ls"
alias cdent="cd $ZENENTSRC && ls"
alias cdinst="cd $ZENSRC/inst && ls"

cd $DEV_HOME
#if [ -z "$STY" ]; then
#    exec screen -x -d -R -S zenoss-$ZENREL -c $ZENOSS_DEV_HOME/screenrc
#fi
